generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}

enum TransactionType {
  PURCHASE
  RENT
}

model Product {
  id           String        @id @default(uuid())
  name         String
  description  String?
  price        Float
  rentPrice    Float?   
  categories   Category[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  user         User          @relation("UserProducts", fields: [userId], references: [id])
  userId       String
  transactions Transaction[]
  available    Boolean       @default(true)
  count        Int           @default(0)
}

model Transaction {
  id             String          @id @default(uuid())
  type           TransactionType
  product        Product?        @relation(fields: [productId], references: [id], onDelete: SetNull)
  productId      String?
  seller         User            @relation("SellerTransactions", fields: [sellerId], references: [id])
  sellerId       String
  buyer          User            @relation("BuyerTransactions", fields: [buyerId], references: [id])
  buyerId        String
  rentalStartDate DateTime?
  rentalEndDate   DateTime?
  totalAmount     Float
  count          Int 
  createdAt      DateTime        @default(now())
}

model User {
  id                 String    @id @default(uuid())
  email              String    @unique
  password           String
  firstName          String?
  lastName           String?
  isEmailVerified    Boolean   @default(false)
  products           Product[] @relation("UserProducts")
  buyerTransactions  Transaction[] @relation("BuyerTransactions")
  sellerTransactions Transaction[] @relation("SellerTransactions")
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
}
