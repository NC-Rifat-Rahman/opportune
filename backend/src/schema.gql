# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  access_token: String!
  user: User!
}

enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  OUTDOOR
  SPORTING_GOODS
  TOYS
}

input CreateProductInput {
  categories: [Category!]!
  count: Int!
  description: String
  name: String!
  price: Float!
  rentPrice: Float
}

input CreateTransactionInput {
  count: Int!
  productId: String!
  rentalEndDate: DateTime
  rentalStartDate: DateTime
  type: TransactionType!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteProductInput {
  id: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createProduct(input: CreateProductInput!): Product!
  createTransaction(input: CreateTransactionInput!): Transaction!
  deleteProduct(input: DeleteProductInput!): Product!
  login(input: LoginInput!): AuthResponse!
  register(input: RegisterInput!): User!
  updateProduct(id: String!, input: UpdateProductInput!): Product!
}

type Product {
  available: Boolean
  categories: [Category!]!
  count: Int!
  createdAt: DateTime!
  description: String
  id: ID!
  name: String!
  price: Float!
  rentPrice: Float
  updatedAt: DateTime!
  user: User
  userId: String!
}

type Query {
  getAllProducts: [Product!]!
  getProductById(id: String!): Product!
  getPublicProductById(id: String!): Product!
  hello: String!
  myProducts: [Product!]!
  myTransactions: [Transaction!]!
}

input RegisterInput {
  email: String!
  firstName: String
  lastName: String
  password: String!
}

type Transaction {
  buyer: User!
  count: Int!
  createdAt: DateTime!
  id: ID!
  product: Product!
  rentalEndDate: DateTime
  rentalStartDate: DateTime
  seller: User!
  totalAmount: Float!
  type: TransactionType!
}

enum TransactionType {
  PURCHASE
  RENT
}

input UpdateProductInput {
  categories: [Category!]!
  count: Int!
  description: String
  name: String
  price: Float
  rentPrice: Float
}

type User {
  createdAt: DateTime!
  email: String!
  firstName: String
  id: ID!
  isEmailVerified: Boolean!
  lastName: String
  updatedAt: DateTime!
}